{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/weather-tabs/tab-content.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  overflow: auto;\\n  background-color: \", \";\\n  padding: 1.5rem;\\n  border-top: 1rem solid \", \";\\n  box-shadow: 10px 10px 5px 0px \", \";\\n\\n  section {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    flex-grow: 1;\\n    flex-shrink: 0;\\n    flex-basis: 8rem;\\n    min-width: 0;\\n    padding: 0 1rem;\\n    border-left: 1px solid \", \";\\n\\n    &:first-child {\\n      border-left: 0;\\n    }\\n  }\\n\\n  strong {\\n    white-space: pre;\\n  }\\n\\n  .wind-direction {\\n    width: 2rem;\\n    height: 2rem;\\n    margin-top: 0.25rem;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport config, { symbols, isDayTime } from 'config/config';\nimport colors from 'styles/colors';\nimport { convertKelvinToCelsius } from 'utils/helper';\nimport IconData from 'atoms/icon-data';\nimport termIcon from 'assets/icons/term.png';\nimport cloudsIcon from 'assets/icons/clouds.png';\nimport humidityIcon from 'assets/icons/humidity.png';\nimport pressureIcon from 'assets/icons/pressure.png';\nimport windDegIcon from 'assets/icons/wind_deg.png';\nimport windSpeedIcon from 'assets/icons/wind_speed.png';\nimport falloutIcon from 'assets/icons/fallout.png';\n\nconst TabContent = props => {\n  const className = props.className,\n        data = props.data;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, data.map((item, key) => React.createElement(\"section\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, moment(item.date).format('HH:mm')), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"\".concat(config.forecast_icons_url).concat(item.weather_icon, \".png\"),\n    alt: item.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(IconData, {\n    src: termIcon,\n    alt: \"temperature\",\n    data: React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, convertKelvinToCelsius(item.temp), \" \", symbols.celsius),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(IconData, {\n    src: cloudsIcon,\n    alt: \"clouds\",\n    data: \"\".concat(item.clouds, \"%\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(IconData, {\n    src: humidityIcon,\n    alt: \"humidity\",\n    data: \"\".concat(item.humidity, \"%\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(IconData, {\n    src: pressureIcon,\n    alt: \"pressure\",\n    data: \"\".concat(Math.round(item.pressure), \" hpa\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(IconData, {\n    src: windSpeedIcon,\n    alt: \"wind speed\",\n    data: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\".concat(item.wind_speed, \" m/s\")), React.createElement(\"img\", {\n      src: windDegIcon,\n      alt: \"wind direction\",\n      className: \"wind-direction\",\n      style: {\n        transform: \"rotate(\".concat(item.wind_deg + 180, \"deg)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(IconData, {\n    src: falloutIcon,\n    alt: \"fallout\",\n    data: \"\".concat(item.fallout || 0, \" mm\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nconst StyledTabContent = styled(TabContent)(_templateObject(), colors.white900, isDayTime ? colors.blue100 : colors.grey900, isDayTime ? colors.blue500 : colors.black900, colors.grey700);\nexport default StyledTabContent;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/weather-tabs/tab-content.tsx"],"names":["React","styled","moment","config","symbols","isDayTime","colors","convertKelvinToCelsius","IconData","termIcon","cloudsIcon","humidityIcon","pressureIcon","windDegIcon","windSpeedIcon","falloutIcon","TabContent","props","className","data","map","item","key","date","format","forecast_icons_url","weather_icon","description","temp","celsius","clouds","humidity","Math","round","pressure","wind_speed","transform","wind_deg","fallout","StyledTabContent","white900","blue100","grey900","blue500","black900","grey700"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport config, { symbols, isDayTime } from 'config/config';\nimport colors from 'styles/colors';\nimport { WeatherItem } from './weather-tabs';\nimport { convertKelvinToCelsius } from 'utils/helper';\nimport IconData from 'atoms/icon-data';\nimport termIcon from 'assets/icons/term.png';\nimport cloudsIcon from 'assets/icons/clouds.png';\nimport humidityIcon from 'assets/icons/humidity.png';\nimport pressureIcon from 'assets/icons/pressure.png';\nimport windDegIcon from 'assets/icons/wind_deg.png';\nimport windSpeedIcon from 'assets/icons/wind_speed.png';\nimport falloutIcon from 'assets/icons/fallout.png';\n\nexport interface Props {\n  className?: string;\n  data: WeatherItem[];\n}\n\nconst TabContent = (props: Props): JSX.Element => {\n  const { className, data } = props;\n\n  return (\n    <div className={className}>\n      {data.map((item, key) => (\n        <section key={key}>\n          <strong>{moment(item.date).format('HH:mm')}</strong>\n          <div>\n            <img\n              src={`${config.forecast_icons_url}${item.weather_icon}.png`}\n              alt={item.description}\n            />\n          </div>\n          <IconData\n            src={termIcon}\n            alt=\"temperature\"\n            data={\n              <strong>\n                {convertKelvinToCelsius(item.temp)} {symbols.celsius}\n              </strong>\n            }\n          />\n          <IconData src={cloudsIcon} alt=\"clouds\" data={`${item.clouds}%`} />\n          <IconData\n            src={humidityIcon}\n            alt=\"humidity\"\n            data={`${item.humidity}%`}\n          />\n          <IconData\n            src={pressureIcon}\n            alt=\"pressure\"\n            data={`${Math.round(item.pressure)} hpa`}\n          />\n          <IconData\n            src={windSpeedIcon}\n            alt=\"wind speed\"\n            data={\n              <React.Fragment>\n                <div>{`${item.wind_speed} m/s`}</div>\n                <img\n                  src={windDegIcon}\n                  alt=\"wind direction\"\n                  className=\"wind-direction\"\n                  style={{ transform: `rotate(${item.wind_deg + 180}deg)` }}\n                />\n              </React.Fragment>\n            }\n          />\n          <IconData\n            src={falloutIcon}\n            alt=\"fallout\"\n            data={`${item.fallout || 0} mm`}\n          />\n        </section>\n      ))}\n    </div>\n  );\n};\n\nconst StyledTabContent = styled(TabContent)`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n  background-color: ${colors.white900};\n  padding: 1.5rem;\n  border-top: 1rem solid ${isDayTime ? colors.blue100 : colors.grey900};\n  box-shadow: 10px 10px 5px 0px ${isDayTime ? colors.blue500 : colors.black900};\n\n  section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    flex-shrink: 0;\n    flex-basis: 8rem;\n    min-width: 0;\n    padding: 0 1rem;\n    border-left: 1px solid ${colors.grey700};\n\n    &:first-child {\n      border-left: 0;\n    }\n  }\n\n  strong {\n    white-space: pre;\n  }\n\n  .wind-direction {\n    width: 2rem;\n    height: 2rem;\n    margin-top: 0.25rem;\n  }\n`;\n\nexport default StyledTabContent;\n"]},"metadata":{},"sourceType":"module"}