{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/atoms/icon-data.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tpadding: 0.75rem 0.5rem;\\n\\n\\t&.sm {\\n\\t\\tfont-size: 0.75rem;\\n\\t}\\n\\t&.md {\\n\\t\\tfont-size: 1rem;\\n\\t}\\n\\t&.lg {\\n\\t\\tfont-size: 1.25rem;\\n\\t}\\n\\n\\t.data {\\n    white-space: pre;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n\\t}\\n\\n\\timg {\\n    margin-right: 0.5rem;\\n\\t\\twidth: 2em;\\n  \\theight: 2em;\\n\\t}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst IconData = props => {\n  const className = props.className,\n        src = props.src,\n        alt = props.alt,\n        data = props.data,\n        _props$size = props.size,\n        size = _props$size === void 0 ? 'md' : _props$size;\n  return React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(size, \" icon-data\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, data));\n};\n\nconst StyledIconData = styled(IconData)(_templateObject());\nexport default StyledIconData;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/atoms/icon-data.tsx"],"names":["React","styled","IconData","props","className","src","alt","data","size","StyledIconData"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAWA,MAAMC,QAAQ,GAAIC,KAAD,IAA+B;AAAA,QACvCC,SADuC,GACID,KADJ,CACvCC,SADuC;AAAA,QAC5BC,GAD4B,GACIF,KADJ,CAC5BE,GAD4B;AAAA,QACvBC,GADuB,GACIH,KADJ,CACvBG,GADuB;AAAA,QAClBC,IADkB,GACIJ,KADJ,CAClBI,IADkB;AAAA,sBACIJ,KADJ,CACZK,IADY;AAAA,QACZA,IADY,4BACL,IADK;AAG/C,SACC;AAAK,IAAA,SAAS,YAAKJ,SAAL,cAAkBI,IAAlB,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEH,GAAV;AAAe,IAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAvB,CAFD,CADD;AAMA,CATD;;AAWA,MAAME,cAAc,GAAGR,MAAM,CAACC,QAAD,CAAT,mBAApB;AA+BA,eAAeO,cAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Size } from 'types/types';\n\nexport interface Props {\n\tclassName?: string;\n\tsrc: string;\n\talt: string;\n\tdata: any;\n\tsize?: Size;\n}\n\nconst IconData = (props: Props): JSX.Element => {\n\tconst { className, src, alt, data, size = 'md' } = props;\n\n\treturn (\n\t\t<div className={`${className} ${size} icon-data`}>\n\t\t\t<img src={src} alt={alt} />\n\t\t\t<div className=\"data\">{data}</div>\n\t\t</div>\n\t);\n};\n\nconst StyledIconData = styled(IconData)`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.75rem 0.5rem;\n\n\t&.sm {\n\t\tfont-size: 0.75rem;\n\t}\n\t&.md {\n\t\tfont-size: 1rem;\n\t}\n\t&.lg {\n\t\tfont-size: 1.25rem;\n\t}\n\n\t.data {\n    white-space: pre;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\t}\n\n\timg {\n    margin-right: 0.5rem;\n\t\twidth: 2em;\n  \theight: 2em;\n\t}\n`;\n\nexport default StyledIconData;\n"]},"metadata":{},"sourceType":"module"}