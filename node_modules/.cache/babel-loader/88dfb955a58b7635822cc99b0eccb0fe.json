{"ast":null,"code":"import _slicedToArray from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/menu-context/menu-context.tsx\";\nimport React, { useState } from 'react';\nconst defaultContext = {\n  isMenuOpen: false,\n  setMenuState: () => null\n};\nexport const MenuContext = React.createContext(defaultContext);\n\nconst MenuProvider = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isMenuOpen = _useState2[0],\n        setMenuState = _useState2[1];\n\n  return React.createElement(MenuContext.Provider, {\n    value: {\n      isMenuOpen,\n      setMenuState\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default MenuProvider;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/menu-context/menu-context.tsx"],"names":["React","useState","defaultContext","isMenuOpen","setMenuState","MenuContext","createContext","MenuProvider","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAOA,MAAMC,cAAuB,GAAG;AAC/BC,EAAAA,UAAU,EAAE,KADmB;AAE/BC,EAAAA,YAAY,EAAE,MAAM;AAFW,CAAhC;AAKA,OAAO,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,CAA6BJ,cAA7B,CAApB;;AAEP,MAAMK,YAAY,GAAIC,KAAD,IAA6B;AAAA,oBACZP,QAAQ,CAAU,KAAV,CADI;AAAA;AAAA,QACzCE,UADyC;AAAA,QAC7BC,YAD6B;;AAGjD,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACND,MAAAA,UADM;AAENC,MAAAA;AAFM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEI,KAAK,CAACC,QANR,CADD;AAUA,CAbD;;AAeA,eAAeF,YAAf","sourcesContent":["import React, { useState } from 'react';\n\ninterface Context {\n\tisMenuOpen: boolean;\n\tsetMenuState: (value: any) => void;\n}\n\nconst defaultContext: Context = {\n\tisMenuOpen: false,\n\tsetMenuState: () => null,\n};\n\nexport const MenuContext = React.createContext<Context>(defaultContext);\n\nconst MenuProvider = (props: any): JSX.Element => {\n\tconst [ isMenuOpen, setMenuState ] = useState<boolean>(false);\n\n\treturn (\n\t\t<MenuContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisMenuOpen,\n\t\t\t\tsetMenuState,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</MenuContext.Provider>\n\t);\n};\n\nexport default MenuProvider;\n"]},"metadata":{},"sourceType":"module"}