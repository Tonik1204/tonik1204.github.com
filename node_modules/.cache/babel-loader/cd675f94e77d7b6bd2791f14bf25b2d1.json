{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/weather-tabs/tabs.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  .tabs-menu {\\n    cursor: pointer;\\n    margin: 5rem 5rem 0 6rem;\\n\\n    .tabs-menu-wrap {\\n      display: flex;\\n      height: 11rem;\\n      align-items: center;\\n      font-size: 1.2rem;\\n      padding: 0 1.75rem;\\n      overflow: auto;\\n\\n      @media \", \" {\\n        font-size: 1rem;\\n      }\\n\\n      .tab {\\n        color: \", \";\\n        flex-grow: 1;\\n        flex-shrink: 0;\\n        flex-basis: 9rem;\\n        min-width: 0;\\n        text-decoration: none;\\n        padding: 0.5rem 1rem;\\n        border: 1px solid \", \";\\n        background-color: \", \";\\n        text-transform: capitalize;\\n        transition: transform 0.2s;\\n        height: 9rem;\\n\\n        :not(.active) {\\n          border-bottom: 0.3rem solid\\n            \", \";\\n          box-shadow: 10px 10px 5px 0px\\n            \", \";\\n\\n          :not(:first-child) {\\n            border-left: 0;\\n          }\\n          :hover {\\n            transform: scale(1.1);\\n            z-index: 1;\\n            border-left: 1px solid \", \";\\n          }\\n        }\\n      }\\n    }\\n\\n    .tabs-menu-wrap .active {\\n      color: \", \";\\n      transform: scale(1.2) translate(-0.5rem);\\n      cursor: default;\\n      border-top: 0.5rem solid \", \";\\n    }\\n  }\\n\\n  .tabs-menu-content {\\n    margin: 5rem 3rem;\\n\\n    @media \", \" {\\n      margin: 5rem 1rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport colors from 'styles/colors';\nimport { device, isDayTime } from 'config/config';\nimport TabItem from './tab-item';\n\nclass Tabs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTab: this.props.defaultSelectedTab || this.props.tabs[0]\n    };\n\n    this.switchTab = selectedTab => {\n      const switchTabHandler = this.props.switchTabHandler;\n      this.setState({\n        selectedTab\n      });\n\n      if (switchTabHandler) {\n        switchTabHandler(selectedTab);\n      }\n    };\n\n    this.handleSwitchTab = tab => () => this.switchTab(tab);\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          setTabContent = _this$props.setTabContent,\n          tabs = _this$props.tabs;\n    const selectedTab = this.state.selectedTab;\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tabs-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tabs-menu-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, tabs.map((tab, key) => React.createElement(\"div\", {\n      key: key,\n      className: \"tab \".concat(tab.id === selectedTab.id ? 'active' : ''),\n      onClick: this.handleSwitchTab(tab),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TabItem, {\n      data: tab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))))), setTabContent && React.createElement(\"div\", {\n      className: \"tabs-menu-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, setTabContent(selectedTab)));\n  }\n\n}\n\nconst StyledTabs = styled(Tabs)(_templateObject(), device.desktop, colors.text, colors.grey900, colors.white, isDayTime ? colors.purpure : colors.lightBlue500, isDayTime ? colors.blue500 : colors.black800, colors.grey900, colors.blue600, isDayTime ? colors.green500 : colors.green300, device.laptop);\nexport default StyledTabs;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/weather-tabs/tabs.tsx"],"names":["React","styled","colors","device","isDayTime","TabItem","Tabs","Component","state","selectedTab","props","defaultSelectedTab","tabs","switchTab","switchTabHandler","setState","handleSwitchTab","tab","render","className","setTabContent","map","key","id","StyledTabs","desktop","text","grey900","white","purpure","lightBlue500","blue500","black800","blue600","green500","green300","laptop"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAcA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAyD;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACNC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,kBAAX,IAAiC,KAAKD,KAAL,CAAWE,IAAX,CAAgB,CAAhB;AADxC,KAD+C;;AAAA,SAKvDC,SALuD,GAK1CJ,WAAD,IAAiC;AAAA,YACnCK,gBADmC,GACd,KAAKJ,KADS,CACnCI,gBADmC;AAE3C,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;;AACA,UAAIK,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,CAACL,WAAD,CAAhB;AACD;AACF,KAXsD;;AAAA,SAavDO,eAbuD,GAapCC,GAAD,IAAyB,MAAM,KAAKJ,SAAL,CAAeI,GAAf,CAbM;AAAA;;AAevDC,EAAAA,MAAM,GAAG;AAAA,wBACoC,KAAKR,KADzC;AAAA,UACCS,SADD,eACCA,SADD;AAAA,UACYC,aADZ,eACYA,aADZ;AAAA,UAC2BR,IAD3B,eAC2BA,IAD3B;AAAA,UAECH,WAFD,GAEiB,KAAKD,KAFtB,CAECC,WAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAEU,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IAAI,CAACS,GAAL,CAAS,CAACJ,GAAD,EAAMK,GAAN,KACR;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,SAAS,gBAASL,GAAG,CAACM,EAAJ,KAAWd,WAAW,CAACc,EAAvB,GAA4B,QAA5B,GAAuC,EAAhD,CAFX;AAGE,MAAA,OAAO,EAAE,KAAKP,eAAL,CAAqBC,GAArB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADD,CADH,CADF,CADF,EAcGG,aAAa,IACZ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCA,aAAa,CAACX,WAAD,CAAjD,CAfJ,CADF;AAoBD;;AAvCsD;;AA0CzD,MAAMe,UAAU,GAAGvB,MAAM,CAACK,IAAD,CAAT,oBAeDH,MAAM,CAACsB,OAfN,EAoBCvB,MAAM,CAACwB,IApBR,EA2BYxB,MAAM,CAACyB,OA3BnB,EA4BYzB,MAAM,CAAC0B,KA5BnB,EAmCFxB,SAAS,GAAGF,MAAM,CAAC2B,OAAV,GAAoB3B,MAAM,CAAC4B,YAnClC,EAqCF1B,SAAS,GAAGF,MAAM,CAAC6B,OAAV,GAAoB7B,MAAM,CAAC8B,QArClC,EA6CqB9B,MAAM,CAACyB,OA7C5B,EAoDDzB,MAAM,CAAC+B,OApDN,EAuDiB7B,SAAS,GAAGF,MAAM,CAACgC,QAAV,GAAqBhC,MAAM,CAACiC,QAvDtD,EA8DHhC,MAAM,CAACiC,MA9DJ,CAAhB;AAoEA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport colors from 'styles/colors';\nimport { WeatherTabItem } from './weather-tabs';\nimport { device, isDayTime } from 'config/config';\nimport TabItem from './tab-item';\n\ninterface TabsProps {\n  className?: string;\n  tabs: WeatherTabItem[];\n  setTabContent?: (selectedTab: WeatherTabItem) => JSX.Element;\n  switchTabHandler?: (event: any) => void;\n  defaultSelectedTab?: WeatherTabItem;\n}\n\ninterface TabsState {\n  selectedTab: WeatherTabItem;\n}\n\nclass Tabs extends React.Component<TabsProps, TabsState> {\n  state = {\n    selectedTab: this.props.defaultSelectedTab || this.props.tabs[0],\n  };\n\n  switchTab = (selectedTab: WeatherTabItem) => {\n    const { switchTabHandler } = this.props;\n    this.setState({ selectedTab });\n    if (switchTabHandler) {\n      switchTabHandler(selectedTab);\n    }\n  };\n\n  handleSwitchTab = (tab: WeatherTabItem) => () => this.switchTab(tab);\n\n  render() {\n    const { className, setTabContent, tabs } = this.props;\n    const { selectedTab } = this.state;\n\n    return (\n      <div className={className}>\n        <div className=\"tabs-menu\">\n          <div className=\"tabs-menu-wrap\">\n            {tabs.map((tab, key) => (\n              <div\n                key={key}\n                className={`tab ${tab.id === selectedTab.id ? 'active' : ''}`}\n                onClick={this.handleSwitchTab(tab)}\n              >\n                <TabItem data={tab} />\n              </div>\n            ))}\n          </div>\n        </div>\n        {setTabContent && (\n          <div className=\"tabs-menu-content\">{setTabContent(selectedTab)}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst StyledTabs = styled(Tabs)`\n  width: 100%;\n\n  .tabs-menu {\n    cursor: pointer;\n    margin: 5rem 5rem 0 6rem;\n\n    .tabs-menu-wrap {\n      display: flex;\n      height: 11rem;\n      align-items: center;\n      font-size: 1.2rem;\n      padding: 0 1.75rem;\n      overflow: auto;\n\n      @media ${device.desktop} {\n        font-size: 1rem;\n      }\n\n      .tab {\n        color: ${colors.text};\n        flex-grow: 1;\n        flex-shrink: 0;\n        flex-basis: 9rem;\n        min-width: 0;\n        text-decoration: none;\n        padding: 0.5rem 1rem;\n        border: 1px solid ${colors.grey900};\n        background-color: ${colors.white};\n        text-transform: capitalize;\n        transition: transform 0.2s;\n        height: 9rem;\n\n        :not(.active) {\n          border-bottom: 0.3rem solid\n            ${isDayTime ? colors.purpure : colors.lightBlue500};\n          box-shadow: 10px 10px 5px 0px\n            ${isDayTime ? colors.blue500 : colors.black800};\n\n          :not(:first-child) {\n            border-left: 0;\n          }\n          :hover {\n            transform: scale(1.1);\n            z-index: 1;\n            border-left: 1px solid ${colors.grey900};\n          }\n        }\n      }\n    }\n\n    .tabs-menu-wrap .active {\n      color: ${colors.blue600};\n      transform: scale(1.2) translate(-0.5rem);\n      cursor: default;\n      border-top: 0.5rem solid ${isDayTime ? colors.green500 : colors.green300};\n    }\n  }\n\n  .tabs-menu-content {\n    margin: 5rem 3rem;\n\n    @media ${device.laptop} {\n      margin: 5rem 1rem;\n    }\n  }\n`;\n\nexport default StyledTabs;\n"]},"metadata":{},"sourceType":"module"}