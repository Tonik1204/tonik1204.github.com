{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/header/header.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  background-color: \", \";\\n  padding: 0.75rem;\\n\\n  .app-menu-button {\\n    margin-right: 1rem;\\n    transition: transform 0.3s;\\n    :hover {\\n      transform: rotateZ(-10deg);\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Search } from 'components/search';\nimport { MenuContext } from 'components/menu-context';\nimport colors from 'styles/colors';\nimport AppTitle from 'atoms/app-title';\nimport IconButton from 'atoms/icon-button';\nimport menuImg from 'assets/icons/menu.png';\n\nconst Header = props => {\n  const className = props.className;\n\n  const _useContext = useContext(MenuContext),\n        isMenuOpen = _useContext.isMenuOpen,\n        setMenuState = _useContext.setMenuState;\n\n  const clickMenuHandler = () => setMenuState(!isMenuOpen);\n\n  return React.createElement(\"header\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: \"app-menu-button\",\n    src: menuImg,\n    alt: \"app-menu-button\",\n    size: \"lg\",\n    onClick: clickMenuHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(AppTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Weather\"), React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst HeaderStyled = styled(Header)(_templateObject(), colors.blue400);\nexport default HeaderStyled;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/header/header.tsx"],"names":["React","useContext","styled","Search","MenuContext","colors","AppTitle","IconButton","menuImg","Header","props","className","isMenuOpen","setMenuState","clickMenuHandler","HeaderStyled","blue400"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAKA,MAAMC,MAAM,GAAIC,KAAD,IAAkB;AAAA,QACxBC,SADwB,GACVD,KADU,CACxBC,SADwB;;AAAA,sBAEKV,UAAU,CAACG,WAAD,CAFf;AAAA,QAExBQ,UAFwB,eAExBA,UAFwB;AAAA,QAEZC,YAFY,eAEZA,YAFY;;AAIhC,QAAMC,gBAAgB,GAAG,MAAMD,YAAY,CAAC,CAACD,UAAF,CAA3C;;AAEA,SACC;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AACC,IAAA,SAAS,EAAC,iBADX;AAEC,IAAA,GAAG,EAAEH,OAFN;AAGC,IAAA,GAAG,EAAC,iBAHL;AAIC,IAAA,IAAI,EAAC,IAJN;AAKC,IAAA,OAAO,EAAEM,gBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAQC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARD,EASC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAaA,CAnBD;;AAqBA,MAAMC,YAAY,GAAGb,MAAM,CAACO,MAAD,CAAT,oBAEIJ,MAAM,CAACW,OAFX,CAAlB;AAcA,eAAeD,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Search } from 'components/search';\nimport { MenuContext } from 'components/menu-context';\nimport colors from 'styles/colors';\nimport AppTitle from 'atoms/app-title';\nimport IconButton from 'atoms/icon-button';\nimport menuImg from 'assets/icons/menu.png';\ninterface Props {\n\tclassName?: string;\n}\n\nconst Header = (props: Props) => {\n\tconst { className } = props;\n\tconst { isMenuOpen, setMenuState } = useContext(MenuContext);\n\n\tconst clickMenuHandler = () => setMenuState(!isMenuOpen);\n\n\treturn (\n\t\t<header className={className}>\n\t\t\t<IconButton\n\t\t\t\tclassName=\"app-menu-button\"\n\t\t\t\tsrc={menuImg}\n\t\t\t\talt=\"app-menu-button\"\n\t\t\t\tsize=\"lg\"\n\t\t\t\tonClick={clickMenuHandler}\n\t\t\t/>\n\t\t\t<AppTitle>Weather</AppTitle>\n\t\t\t<Search />\n\t\t</header>\n\t);\n};\n\nconst HeaderStyled = styled(Header)`\n  display: flex;\n  background-color: ${colors.blue400};\n  padding: 0.75rem;\n\n  .app-menu-button {\n    margin-right: 1rem;\n    transition: transform 0.3s;\n    :hover {\n      transform: rotateZ(-10deg);\n    }\n  }\n`;\n\nexport default HeaderStyled;\n"]},"metadata":{},"sourceType":"module"}