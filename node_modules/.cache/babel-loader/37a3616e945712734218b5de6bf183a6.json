{"ast":null,"code":"var _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/toast-container/toast-container.tsx\";\nimport React, { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { toastTimer } from 'config/config';\nimport ToastMessage from 'atoms/toast-message';\n\nconst Toast = props => {\n  const show = props.show,\n        _props$errorText = props.errorText,\n        errorText = _props$errorText === void 0 ? 'Sorry, an error has occurred. Please try again' : _props$errorText;\n  const toastId = '';\n  useEffect(() => {\n    if (show && !toast.isActive(toastId)) {\n      toast(React.createElement(ToastMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, errorText), {\n        toastId\n      });\n    }\n  }, [show, errorText]);\n  return React.createElement(ToastContainer, {\n    autoClose: toastTimer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n};\n\nexport default Toast;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/components/toast-container/toast-container.tsx"],"names":["React","useEffect","toast","ToastContainer","toastTimer","ToastMessage","Toast","props","show","errorText","toastId","isActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,2CAAP;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAOA,MAAMC,KAAK,GAAIC,KAAD,IAAkB;AAAA,QAE5BC,IAF4B,GAI1BD,KAJ0B,CAE5BC,IAF4B;AAAA,2BAI1BD,KAJ0B,CAG5BE,SAH4B;AAAA,QAG5BA,SAH4B,iCAGhB,gDAHgB;AAK9B,QAAMC,OAAe,GAAG,EAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAI,IAAI,CAACN,KAAK,CAACS,QAAN,CAAeD,OAAf,CAAb,EAAsC;AACpCR,MAAAA,KAAK,CAAC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeO,SAAf,CAAD,EAA2C;AAC9CC,QAAAA;AAD8C,OAA3C,CAAL;AAGD;AACF,GANQ,EAMN,CAACF,IAAD,EAAOC,SAAP,CANM,CAAT;AAQA,SAAO,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEL,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhBD;;AAkBA,eAAeE,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { toastTimer } from 'config/config';\nimport ToastMessage from 'atoms/toast-message';\n\ninterface Props {\n  show: boolean;\n  errorText?: string;\n}\n\nconst Toast = (props: Props) => {\n  const {\n    show,\n    errorText = 'Sorry, an error has occurred. Please try again',\n  } = props;\n  const toastId: string = '';\n\n  useEffect(() => {\n    if (show && !toast.isActive(toastId)) {\n      toast(<ToastMessage>{errorText}</ToastMessage>, {\n        toastId,\n      });\n    }\n  }, [show, errorText]);\n\n  return <ToastContainer autoClose={toastTimer} />;\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}