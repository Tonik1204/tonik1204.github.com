{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/app.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-image: url(\", \");\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n  background-position: center center;\\n\\n  &.app-menu-opened .app-wrapper {\\n    transform: rotate(-6deg);\\n\\n    @media \", \" {\\n      transform: rotate(-8deg);\\n    }\\n\\n    @media \", \" {\\n      transform: rotate(-12deg);\\n    }\\n\\n    @media \", \" {\\n      transform: rotate(-16deg);\\n    }\\n  }\\n\\n  .app-wrapper {\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    grid-template-rows: auto 1fr auto;\\n    grid-template-areas:\\n      'header'\\n      'container'\\n      'footer';\\n    transition: transform 1.25s;\\n    transform-origin: right top;\\n    height: 100vh;\\n  }\\n\\n  .app-header {\\n    grid-area: header;\\n  }\\n\\n  .app-main {\\n    grid-area: main;\\n  }\\n\\n  .app-aside {\\n    grid-area: aside;\\n  }\\n\\n  .app-footer {\\n    grid-area: footer;\\n  }\\n\\n  .app-container {\\n    grid-area: container;\\n    display: grid;\\n    grid-template-columns: 7fr 1fr;\\n    grid-template-rows: auto 1fr;\\n    grid-template-areas: 'main aside';\\n    background-image: url(\", \");\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n    background-position: center center;\\n\\n    @media \", \" {\\n      grid-template-areas:\\n        'aside aside'\\n        'main main';\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { device, isDayTime } from 'config/config';\nimport { Header } from 'components/header';\nimport { Main } from 'components/main';\nimport { Aside } from 'components/aside';\nimport { Footer } from 'components/footer';\nimport { Nav } from 'components/nav';\nimport { MenuContext } from 'components/menu-context';\nimport dayImg from 'assets/imgs/day-sky.jpg';\nimport nightImg from 'assets/imgs/night-sky.jpg';\nimport spaceImg from 'assets/imgs/space.jpg';\n\nconst App = props => {\n  const className = props.className;\n\n  const _useContext = useContext(MenuContext),\n        isMenuOpen = _useContext.isMenuOpen;\n\n  const menuOpenedClass = isMenuOpen ? 'app-menu-opened' : '';\n  return React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(menuOpenedClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, isMenuOpen && React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"app-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"app-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"app-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Main, {\n    className: \"app-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Aside, {\n    className: \"app-aside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    className: \"app-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst AppStyled = styled(App)(_templateObject(), spaceImg, device.laptop, device.tablet, device.mobile, isDayTime ? dayImg : nightImg, device.laptop);\nexport default AppStyled;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/app.tsx"],"names":["React","useContext","styled","device","isDayTime","Header","Main","Aside","Footer","Nav","MenuContext","dayImg","nightImg","spaceImg","App","props","className","isMenuOpen","menuOpenedClass","AppStyled","laptop","tablet","mobile"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAMA,MAAMC,GAAG,GAAIC,KAAD,IAAkB;AAAA,QACpBC,SADoB,GACND,KADM,CACpBC,SADoB;;AAAA,sBAELf,UAAU,CAACS,WAAD,CAFL;AAAA,QAEpBO,UAFoB,eAEpBA,UAFoB;;AAG5B,QAAMC,eAAe,GAAGD,UAAU,GAAG,iBAAH,GAAuB,EAAzD;AAEA,SACE;AAAK,IAAA,SAAS,YAAKD,SAAL,cAAkBE,eAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,IAAI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF;AAaD,CAlBD;;AAoBA,MAAME,SAAS,GAAGjB,MAAM,CAACY,GAAD,CAAT,oBACWD,QADX,EASFV,MAAM,CAACiB,MATL,EAaFjB,MAAM,CAACkB,MAbL,EAiBFlB,MAAM,CAACmB,MAjBL,EAyDalB,SAAS,GAAGO,MAAH,GAAYC,QAzDlC,EA8DFT,MAAM,CAACiB,MA9DL,CAAf;AAsEA,eAAeD,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { device, isDayTime } from 'config/config';\nimport { Header } from 'components/header';\nimport { Main } from 'components/main';\nimport { Aside } from 'components/aside';\nimport { Footer } from 'components/footer';\nimport { Nav } from 'components/nav';\nimport { MenuContext } from 'components/menu-context';\nimport dayImg from 'assets/imgs/day-sky.jpg';\nimport nightImg from 'assets/imgs/night-sky.jpg';\nimport spaceImg from 'assets/imgs/space.jpg';\n\ninterface Props {\n  className?: string;\n}\n\nconst App = (props: Props) => {\n  const { className } = props;\n  const { isMenuOpen } = useContext(MenuContext);\n  const menuOpenedClass = isMenuOpen ? 'app-menu-opened' : '';\n\n  return (\n    <div className={`${className} ${menuOpenedClass}`}>\n      {isMenuOpen && <Nav />}\n      <div className=\"app-wrapper\">\n        <Header className=\"app-header\" />\n        <div className=\"app-container\">\n          <Main className=\"app-main\" />\n          <Aside className=\"app-aside\" />\n        </div>\n        <Footer className=\"app-footer\" />\n      </div>\n    </div>\n  );\n};\n\nconst AppStyled = styled(App)`\n  background-image: url(${spaceImg});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n\n  &.app-menu-opened .app-wrapper {\n    transform: rotate(-6deg);\n\n    @media ${device.laptop} {\n      transform: rotate(-8deg);\n    }\n\n    @media ${device.tablet} {\n      transform: rotate(-12deg);\n    }\n\n    @media ${device.mobile} {\n      transform: rotate(-16deg);\n    }\n  }\n\n  .app-wrapper {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto 1fr auto;\n    grid-template-areas:\n      'header'\n      'container'\n      'footer';\n    transition: transform 1.25s;\n    transform-origin: right top;\n    height: 100vh;\n  }\n\n  .app-header {\n    grid-area: header;\n  }\n\n  .app-main {\n    grid-area: main;\n  }\n\n  .app-aside {\n    grid-area: aside;\n  }\n\n  .app-footer {\n    grid-area: footer;\n  }\n\n  .app-container {\n    grid-area: container;\n    display: grid;\n    grid-template-columns: 7fr 1fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas: 'main aside';\n    background-image: url(${isDayTime ? dayImg : nightImg});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n\n    @media ${device.laptop} {\n      grid-template-areas:\n        'aside aside'\n        'main main';\n    }\n  }\n`;\n\nexport default AppStyled;\n"]},"metadata":{},"sourceType":"module"}