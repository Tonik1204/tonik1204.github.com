{"ast":null,"code":"import _objectSpread from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nconst grey = opacity => \"rgba(167, 173, 178, \".concat(opacity, \")\");\n\nconst black = opacity => \"rgba(46, 47, 58, \".concat(opacity, \")\");\n\nconst white = opacity => \"rgba(255, 255, 255, \".concat(opacity, \")\");\n\nconst COLORS = {\n  black: black('1'),\n  black400: black('0.5'),\n  black500: black('0.6'),\n  black600: black('0.7'),\n  black700: black('0.8'),\n  black800: black('0.9'),\n  black900: 'rgb(0, 0, 0)',\n  blue: 'rgb(0, 123, 244)',\n  blue10: 'rgb(246,248,251)',\n  blue100: 'rgb(0, 188, 212)',\n  blue400: 'rgb(6, 126, 178)',\n  blue500: 'rgb(46, 109, 111)',\n  blue600: 'rgb(63, 81, 181)',\n  lightBlue500: 'rgb(96, 169, 244)',\n  green10: 'rgb(237, 247, 238)',\n  green50: 'rgb(219, 242, 220)',\n  green100: 'rgb(201, 236, 203)',\n  green200: 'rgb(165, 223, 168)',\n  green300: 'rgb(128, 210, 133)',\n  green400: 'rgb(99, 209, 105)',\n  green500: 'rgb(83, 198, 88)',\n  green700: 'rgb(74, 192, 79)',\n  grey10: 'rgba(250, 251, 251, 0.5)',\n  grey50: grey('0.1'),\n  grey100: grey('0.2'),\n  grey150: grey('0.25'),\n  grey200: grey('0.3'),\n  grey300: grey('0.4'),\n  grey400: grey('0.5'),\n  grey500: grey('0.6'),\n  grey600: grey('0.7'),\n  grey700: grey('0.8'),\n  grey800: grey('0.9'),\n  grey900: grey('1'),\n  orange100: 'rgba(255, 152, 0, .2)',\n  orange500: 'rgb(255, 152, 0)',\n  red100: 'rgb(253, 236, 234)',\n  red300: 'rgb(247, 91, 72)',\n  red500: 'rgb(244, 67, 54)',\n  red700: 'rgb(229, 56, 45)',\n  yellow: 'rgba(255, 202, 40, 1)',\n  purpure: 'rgb(156, 39, 176)',\n  white: white('1'),\n  white0: white('0'),\n  white800: white('0.8'),\n  white900: white('0.9')\n};\n\nconst colors = _objectSpread({}, COLORS, {\n  text: COLORS.black\n});\n\nconst responses = {\n  alert: colors.red500,\n  success: colors.green500,\n  warn: colors.orange500\n};\nexport default _objectSpread({}, colors, responses);","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/styles/colors.ts"],"names":["grey","opacity","black","white","COLORS","black400","black500","black600","black700","black800","black900","blue","blue10","blue100","blue400","blue500","blue600","lightBlue500","green10","green50","green100","green200","green300","green400","green500","green700","grey10","grey50","grey100","grey150","grey200","grey300","grey400","grey500","grey600","grey700","grey800","grey900","orange100","orange500","red100","red300","red500","red700","yellow","purpure","white0","white800","white900","colors","text","responses","alert","success","warn"],"mappings":"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","sourcesContent":["const grey = (opacity: string) => `rgba(167, 173, 178, ${opacity})`;\nconst black = (opacity: string) => `rgba(46, 47, 58, ${opacity})`;\nconst white = (opacity: string) => `rgba(255, 255, 255, ${opacity})`;\n\nconst COLORS = {\n  black: black('1'),\n  black400: black('0.5'),\n  black500: black('0.6'),\n  black600: black('0.7'),\n  black700: black('0.8'),\n  black800: black('0.9'),\n  black900: 'rgb(0, 0, 0)',\n  blue: 'rgb(0, 123, 244)',\n  blue10: 'rgb(246,248,251)',\n  blue100: 'rgb(0, 188, 212)',\n  blue400: 'rgb(6, 126, 178)',\n  blue500: 'rgb(46, 109, 111)',\n  blue600: 'rgb(63, 81, 181)',\n  lightBlue500: 'rgb(96, 169, 244)',\n  green10: 'rgb(237, 247, 238)',\n  green50: 'rgb(219, 242, 220)',\n  green100: 'rgb(201, 236, 203)',\n  green200: 'rgb(165, 223, 168)',\n  green300: 'rgb(128, 210, 133)',\n  green400: 'rgb(99, 209, 105)',\n  green500: 'rgb(83, 198, 88)',\n  green700: 'rgb(74, 192, 79)',\n  grey10: 'rgba(250, 251, 251, 0.5)',\n  grey50: grey('0.1'),\n  grey100: grey('0.2'),\n  grey150: grey('0.25'),\n  grey200: grey('0.3'),\n  grey300: grey('0.4'),\n  grey400: grey('0.5'),\n  grey500: grey('0.6'),\n  grey600: grey('0.7'),\n  grey700: grey('0.8'),\n  grey800: grey('0.9'),\n  grey900: grey('1'),\n  orange100: 'rgba(255, 152, 0, .2)',\n  orange500: 'rgb(255, 152, 0)',\n  red100: 'rgb(253, 236, 234)',\n  red300: 'rgb(247, 91, 72)',\n  red500: 'rgb(244, 67, 54)',\n  red700: 'rgb(229, 56, 45)',\n  yellow: 'rgba(255, 202, 40, 1)',\n  purpure: 'rgb(156, 39, 176)',\n  white: white('1'),\n  white0: white('0'),\n  white800: white('0.8'),\n  white900: white('0.9'),\n};\n\nconst colors = {\n  ...COLORS,\n  text: COLORS.black,\n};\n\nconst responses = {\n  alert: colors.red500,\n  success: colors.green500,\n  warn: colors.orange500,\n};\n\nexport default {\n  ...colors,\n  ...responses,\n};\n"]},"metadata":{},"sourceType":"module"}