{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/atoms/dropdown.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  border: 1px solid \", \";\\n  border-top: 0;\\n  position: absolute;\\n  z-index: 1;\\n  width: calc(100% + 2px);\\n  left: -1px;\\n  max-height: 21rem;\\n  overflow: auto;\\n\\n  .dropdown-item {\\n    cursor: pointer;\\n    padding: 0.75rem 1rem;\\n\\n    :hover {\\n      background-color: \", \";\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport colors from 'styles/colors';\n\nconst Dropdown = props => {\n  const className = props.className,\n        items = props.items,\n        onSelect = props.onSelect;\n\n  const clickHandler = item => () => onSelect && onSelect(item);\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(className, \" dropdown\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, items.map((item, key) => React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    key: key,\n    onMouseDown: clickHandler(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, item)));\n};\n\nconst DropdownStyled = styled(Dropdown)(_templateObject(), colors.white, colors.black, colors.lightBlue500);\nexport default DropdownStyled;","map":{"version":3,"sources":["/Users/tonik/Tonik/INTERVIEW_TASK/weather-forecast/src/atoms/dropdown.tsx"],"names":["React","styled","colors","Dropdown","props","className","items","onSelect","clickHandler","item","map","key","DropdownStyled","white","black","lightBlue500"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAQA,MAAMC,QAAQ,GAAIC,KAAD,IAA+B;AAAA,QACvCC,SADuC,GACRD,KADQ,CACvCC,SADuC;AAAA,QAC5BC,KAD4B,GACRF,KADQ,CAC5BE,KAD4B;AAAA,QACrBC,QADqB,GACRH,KADQ,CACrBG,QADqB;;AAG/C,QAAMC,YAAY,GAAIC,IAAD,IAAkB,MAAMF,QAAQ,IAAIA,QAAQ,CAACE,IAAD,CAAjE;;AAEA,SACC;AAAK,IAAA,SAAS,YAAKJ,SAAL,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACI,GAAN,CAAU,CAACD,IAAD,EAAOE,GAAP,KACV;AACC,IAAA,SAAS,EAAC,eADX;AAEC,IAAA,GAAG,EAAEA,GAFN;AAGC,IAAA,WAAW,EAAEH,YAAY,CAACC,IAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEA,IALF,CADA,CADF,CADD;AAaA,CAlBD;;AAoBA,MAAMG,cAAc,GAAGX,MAAM,CAACE,QAAD,CAAT,oBACED,MAAM,CAACW,KADT,EAEEX,MAAM,CAACY,KAFT,EAgBMZ,MAAM,CAACa,YAhBb,CAApB;AAqBA,eAAeH,cAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport colors from 'styles/colors';\n\ninterface Props {\n\tclassName?: string;\n\titems: string[];\n\tonSelect?: (item: string) => void;\n}\n\nconst Dropdown = (props: Props): JSX.Element => {\n\tconst { className, items, onSelect } = props;\n\n\tconst clickHandler = (item: string) => () => onSelect && onSelect(item);\n\n\treturn (\n\t\t<div className={`${className} dropdown`}>\n\t\t\t{items.map((item, key) => (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dropdown-item\"\n\t\t\t\t\tkey={key}\n\t\t\t\t\tonMouseDown={clickHandler(item)}\n\t\t\t\t>\n\t\t\t\t\t{item}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nconst DropdownStyled = styled(Dropdown)`\n  background-color: ${colors.white};\n  border: 1px solid ${colors.black};\n  border-top: 0;\n  position: absolute;\n  z-index: 1;\n  width: calc(100% + 2px);\n  left: -1px;\n  max-height: 21rem;\n  overflow: auto;\n\n  .dropdown-item {\n    cursor: pointer;\n    padding: 0.75rem 1rem;\n\n    :hover {\n      background-color: ${colors.lightBlue500};\n    }\n  }\n`;\n\nexport default DropdownStyled;\n"]},"metadata":{},"sourceType":"module"}